#pragma checksum "C:\Users\kcindric\source\repos\GeoJSON2Shp\GeoJSON2Shp\Views\Home\About.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7af341afff422a5d52483a9682b9fbdb14c2d838"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_About), @"mvc.1.0.view", @"/Views/Home/About.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\kcindric\source\repos\GeoJSON2Shp\GeoJSON2Shp\Views\_ViewImports.cshtml"
using GeoJSON2Shp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\kcindric\source\repos\GeoJSON2Shp\GeoJSON2Shp\Views\_ViewImports.cshtml"
using GeoJSON2Shp.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7af341afff422a5d52483a9682b9fbdb14c2d838", @"/Views/Home/About.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fcfe8952b05c141c4c91c0b0a47e54d1d1dda639", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_About : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\kcindric\source\repos\GeoJSON2Shp\GeoJSON2Shp\Views\Home\About.cshtml"
  
    ViewData["Title"] = "About";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
    <div class=""text-justify about"">
        <h3>About</h3>
        <p>
            Paste a GeoJSON and show it on a map. There you can edit or draw new elements and all the
            changes are going to be shown in the GeoJSON format to the left.
        </p>
        <p>You can compile your own GeoJSON from scratch by drawing on the map.</p>
        <p>
            All shape elements shown on the map are downloadable in a .shp format which is best used in programs
            such as QGIS. Shapefiles are projected in WGS84.
        </p>
        <p>
            This project was influenced by <a href=""geojson.io"">geojson.io</a>. I wanted to create my own
            simplified version and add support for complex ""Multi"" GeoJSON features which <a href=""geojson.io"">geojson.io</a> doesn't support. Also, 
            I wanted to learn more about <a href=""https://geojson.org/"">GeoJSON</a>, 
            <a href=""https://doc.arcgis.com/en/arcgis-online/reference/shapefiles.htm"">ShapeFiles</a> and ");
            WriteLiteral(@"spatial libraries.
        </p>
        <h4>Resources used:</h4>
        <ul class=""icon"">
            <li><a href=""https://dotnet.microsoft.com/"">.NET Core</a> - for the backend stuff. Used it in case the project gets bigger</li>
            <li><a href=""https://leafletjs.com/"">Leaflet.js</a> - interactive map</li>
            <li><a href=""https://www.maptiler.com/"">Maptiler</a> - map tiles</li>
            <li><a href=""http://leaflet.github.io/Leaflet.draw/docs/leaflet-draw-latest.html"">Leaflet Draw</a> - drawing spatial shapes</li>
            <li><a href=""https://github.com/tmcw/geojson-flatten"">geojson-flatten</a> - converting complex (multipolygon, multiline and multipoint) into more
            friendly simple (polygon, line and point) GeoJSON features which shp-write can handle</li>
            <li><a href=""https://github.com/mapbox/shp-write"">shp-write</a> - converting GeoJSON to Shapefiles</li>
            <li><a href=""https://github.com/eligrey/FileSaver.js/"">FileSaver.js</a> - downloadi");
            WriteLiteral(@"ng generated Shapefile</li>
            <li><a href=""https://codemirror.net/"">CodeMirror</a> - code-like text area</li>

        </ul>
        <h4>Known bugs:</h4>
        <ul class=""icon"">
            <li>When downloading a Shapefile all distinct Polygons get merged into one</li>
        </ul>
        <h4>Todo list</h4>
        <ul class=""icon"">
            <li>Example GeoJSON for each feature</li>
            <li>Upload your own Shapefile and convert it or/and edit it</li>
            <li>Zoom to user geolocation</li>
        </ul>
    </div>

");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
